issue,title,primary finding,validator comment,status,root cause (URL),size
findings-12,"If liquidity is insufficient, users may need to pay more tokens in swap2",findings-12,User will not get a refund if swap became cheaper,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L290,105
findings-17,"Incorrect token-in transfer amount implementation in swap2, which might cause user loss of funds.",findings-12,User will not get a refund if swap became cheaper,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L290,202
validation-79,Incorrect amount taken users may lead to paying excess during erc20 swaps,findings-12,User will not get a refund if swap became cheaper,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L290,174
findings-18,"Mis-configured ticks are allowed in positions due to insufficient checks, all subsequent swaps can be incorrect ",validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,198
findings-20,Positions with incorrect tick values can be created,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,83
findings-38,Insufficient validation of tickLower and tickUpper when creating a new position,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,265
findings-9,Unchecked tickLower < tickUpper,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,71
validation-155,Incorrect Tick Order in Position Creation Allows Protocol Accounting Manipulation,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,32
validation-189,Missing Tick Range Validation in create_position Function,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,217
validation-190,Invariant Broken: Pools can be created with `upper tick <= lower tick`,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,73
validation-209,Creation of positions with invalid tick range,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,242
validation-223,Tick `low` can be set higher than tick `up` when creating a position in `pool.create_position`,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,64
validation-241,"when minting position we can pass low tick > upper tick, unlike UniswapV3",validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,211
validation-42,Missing `lower<upper` check in `mint_position`,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,115
validation-59,An attacker can create invalid positions to inflate a pool,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,151
validation-84,The StoragePositions new function doesn't validate low and up parameters as it states it should,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,29
validation-87,Missing Validation for Tick Bounds in Position Creation,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,69
validation-88,No Validation of Input Ranges,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,43
findings-30,"swap_2 implementation will randomly revert due to improper check, root cause for failed test ethers_suite_uniswap_orchestrated_uniswap_two",findings-30,Strict equality. Protocol is not considering the possibility of remaining funds,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L241,147
findings-34,`swap_2_internal` is unusable because of wrong check,findings-30,Strict equality. Protocol is not considering the possibility of remaining funds,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L241,55
validation-235,swap2ExactIn41203F1D() function won't work,findings-30,Strict equality. Protocol is not considering the possibility of remaining funds,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L241,181
validation-46,Unnecessary assertion in `swap_2_internal` causes valid swaps to fail,findings-30,Strict equality. Protocol is not considering the possibility of remaining funds,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L241,108
findings-35,"swapOut functions have invalid slippage check, causing user loss of funds",validation-154,Slippage protection will not work due to a logic error,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/SeawaterAMM.sol#L316,98
validation-154,Incorrect Decoding of Swap Results Leads to Ineffective Slippage Protection,validation-154,Slippage protection will not work due to a logic error,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/SeawaterAMM.sol#L316,32
findings-10,Volatile pools with higher fee structure cannot be created because of tick_spacing,findings-10,Seems QA as this is a feature request rather than a security concern,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L53,57
validation-33,Lp's liquidity may be lost if re-org happens,validation-33,Re-org can make a user to burn its position with funds there,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L529-L543,52
findings-14,Unset `fee_protocol` forces protocol fee loss during swaps,findings-8,Protocol fee lacks a setter,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L31,81
findings-24,"fee_protocol cannot be set, protocol is not able to earn fees.",findings-8,Protocol fee lacks a setter,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L31,71
findings-8,No related function to set fee_protocol,findings-8,Protocol fee lacks a setter,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L31,90
validation-103,fee_protocol is not set anywhere in pool.rs,findings-8,Protocol fee lacks a setter,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L31,107
validation-28,Non-functional protocol fee,findings-8,Protocol fee lacks a setter,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L31,35
validation-52,"It is not possible to set protocol fees, which results in the protocol losing funds",findings-8,Protocol fee lacks a setter,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L31,48
validation-246,Permit2 doesn't allow passing from != msg.sender,validation-246,Permit can only be used by signer ,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/wasm_erc20.rs#L188-L245,72
findings-21,"set_sqrt_price() causing price and tick out of sync, resulting in incorrect liquidity and swap calculation",validation-161,Owner changing the price is front-runneable,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1089,118
findings-22,"Artificially reset pool price will cause invalid swap steps, all subsequent swap to use wrong pool liquidity",validation-161,Owner changing the price is front-runneable,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1089,99
validation-161,Front-running vulnerability in pool price setting function,validation-161,Owner changing the price is front-runneable,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1089,37
validation-185,Unintended under/overflow of the amount already swapped in/out due to unmatching logic,validation-185,Operatation should have overflow protection. ,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L439,79
validation-60,A pool with high liquidity and low price may have a price overflow after swapping,validation-185,Operatation should have overflow protection. ,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L439,97
findings-31,Users can't remove liquidity while a pool is disabled,findings-31,Not possible to remove liquidity if pool is disabled,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L92,36
validation-159,Users unable to remove liquidity from disabled pools,findings-31,Not possible to remove liquidity if pool is disabled,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L92,28
validation-32,Users cannot remove liquidity when the pool is disabled.,findings-31,Not possible to remove liquidity if pool is disabled,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L92,41
validation-86,update_position in pools.rs always checks if pool is enabled,findings-31,Not possible to remove liquidity if pool is disabled,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L92,23
validation-214,Liquidity cannot be removed if the pool is disabled,findings-31,Not possible to remove liquidity if pool is disabled,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L92,61
validation-230,Wrong liquidity formula used,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",366
validation-242,Missing check if liquidity is not increasing when updating positions,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",304
validation-259,X96 sqrt ratio calculated is wrong whenever `(abs_tick & 1) != 0` & `(abs_tick & 0x2) != 0`,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",94
validation-252,Ticks are allowed to be over `int24` deviating form intended uniswap standard,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",105
validation-197,One of the Main Invraiant is broken,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",40
findings-33,Decrease position will always revert due to incorrect function wrapper,validation-63,Missing argument in function declaration,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/SeawaterAMM.sol#L476-L485,111
findings-6,The `incrPositionPermit25468326E` function cannot be used.,validation-63,Missing argument in function declaration,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/SeawaterAMM.sol#L476-L485,102
validation-63,`decrPosition09293696` will not work due to incorrect function signature,validation-63,Missing argument in function declaration,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/SeawaterAMM.sol#L476-L485,78
findings-3,The protocol fee will be permanently stuck in the contract.,validation-54,Inverted function arguments when transferring protocol fees,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/lib.rs#L1149-L1150,67
findings-32,Protocol fees will be forever stuck in the AMM contract.,validation-54,Inverted function arguments when transferring protocol fees,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/lib.rs#L1149-L1150,91
validation-167,Incorrect Parameter in `collect_protocol_7540_F_A_9_F` Method of `lib.rs` Causes Token Transfer Failure when Collecting Protocol Fees,validation-54,Inverted function arguments when transferring protocol fees,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/lib.rs#L1149-L1150,84
validation-210,Parameter Misordering in Fee Collection Function Causes Denial of Service and Fee Loss,validation-54,Inverted function arguments when transferring protocol fees,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/lib.rs#L1149-L1150,143
validation-240,Admin cannot collect protocol fee due to Incorrect Parameter Order in ERC20 Transfer Function Call ,validation-54,Inverted function arguments when transferring protocol fees,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/lib.rs#L1149-L1150,39
validation-37,Protocol fees can't be collected due to implementation error,validation-54,Inverted function arguments when transferring protocol fees,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/lib.rs#L1149-L1150,54
validation-54,Protocol earnings are permanently lost/locked,validation-54,Inverted function arguments when transferring protocol fees,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/lib.rs#L1149-L1150,110
validation-61,"When performing 'swap' and the swap position does not cover 'swap amount', the base price of 'sqrt_price' is set incorrectly.",validation-61,Incorrect update of sqrt price,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L303,278
validation-129,Incorrect `require` statement will reject valid transfers and allow invalid ones,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,70
validation-162,Incorrect ERC721 Token Receiver Validation,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,45
validation-177,Incorrect Validation in OwnershipNFTs.sol Prevents Valid NFT Transfers and Allows Invalid Ones,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,204
validation-180,Inverted Logic in ERC721 Receiver Check,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,67
validation-193,Incorrect Implementation of ERC721 Safe Transfer Check,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,39
validation-22,Incorrect Logic in _onTransferReceived Function Causes Valid ERC721 Safe Transfers to Fail,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,110
validation-220,Inverted Selector Check Causes All ERC721 Safe Transfers to Contract Addresses to Fail,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,66
validation-238,callback of OwnershipNFT's safe operation has wrong require check,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,82
validation-251,Superposition's implementation of `SafeTransferFrom()` is broken,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,103
validation-26,Incorrect require statement in _onTransferReceived(),validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,52
validation-40,_onTransferReceived will revert on correct data result,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,28
validation-44,_onTransferReceived() does not work as intended,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,178
validation-58,Improper implementation of `_onTransferReceived` hook,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,84
validation-69,Incorrect Validation in `_onTransferReceived` Function Leads to Stuck Tokens and Failed Transfers,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,78
validation-93,Wrong require statement in OwnershipNFT::_onTransferReceived,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,65
findings-26,Incorrect verification of onERC721Received callback success,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,55
findings-28,NFT safe transfer will likely always revert,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,54
findings-42,`_onTransferReceived` for position NFTs is implemented incorrectly,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,92
validation-141,Wrong operation,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,29
validation-20,OwnershipNFT transfer via `safeTransferFrom` to non-EOA will be reverted.,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,69
validation-53,Min tick has wrong rounding making part of the liquidity range unaccessible,validation-53,Incorrect min tick computation. Seems QA as this do not poses any security concern,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L94,50
validation-191,The `get_amounts_for_delta()` function at `sqrt_price_math.rs` is implemented incorrectly.,validation-191,Incorrect handling of tick range,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/maths/sqrt_price_math.rs#L252,101
validation-203,`authorised_enablers` role Inconsistencies in Pool Management.,validation-203,Inconsistency with expected actions by authorized enablers,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/lib.rs#L120,80
validation-219,The `authorised_enablers` can disable pools,validation-203,Inconsistency with expected actions by authorized enablers,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/lib.rs#L120,76
validation-221,The `authorised_enablers` are not allowed to create new pools,validation-203,Inconsistency with expected actions by authorized enablers,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/lib.rs#L120,46
findings-37,Users are not paying the swap fees when they swap with `swap_internal`,findings-37,Function is not taking the fee from the user,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L167,50
findings-40,Incorrect underflow handling in `tick::get_fee_growth_inside()` may prevent position modifications,validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,144
validation-107,"tick.rs does not allow for fees to under/overflow, as it is supposed to be",validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,66
validation-208,Fix for fees calculations,validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,223
validation-236,`get_fee_growth_inside` in `tick.rs` should allow for `underflow`/`overflow` but doesn't,validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,171
validation-243,position.update fees operations must be in unchecked,validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,129
validation-38,Fees calculations don’t allow overflowing/underflowing,validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,29
validation-55,"Position's owed fees should allow underflow but it reverts instead, resulting in locked funds",validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,132
validation-56,Position's fee growth can revert resulting in funds permanently locked,validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,164
validation-65,Use of checked arithmetic when handling fee growth,validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,146
validation-92,fee_growth_inside calculations doesnt allow oveflow/underflow,validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,62
validation-244,operations in _mul_div should allow overflow/underflow,validation-236,Fees computation should be allowed to underflow/overflow,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/tick.rs#L125-L246,83
validation-176, Incorrect Implementation of ERC721 Standard,validation-188,Failure to comply with ERC721 standard,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L13,31
validation-178,Missing Required ERC721 Events,validation-188,Failure to comply with ERC721 standard,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L13,47
validation-18,"OwnershipNFTs.sol is not ERC721 compliant, doesnt implement the ERC165 interface. ",validation-188,Failure to comply with ERC721 standard,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L13,35
validation-188,"OwnershipNFTs do not comply with ERC721, breaking composability",validation-188,Failure to comply with ERC721 standard,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L13,38
validation-62,OwnershipNFTs.sol does not declare `supportsInterface` ,validation-188,Failure to comply with ERC721 standard,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L13,69
validation-49,`bytes data` param is not passed to ERC721 recipient as expected by EIP-721,validation-188,Failure to comply with ERC721 standard,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L13,219
findings-11,Emergency council cannot be updated and will force a temporal DoS everytime update is attempted,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,92
findings-23,update_emergency_council() will grant emergency role to the wrong address,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,43
findings-7,The `seawater_admin` cannot update the `emergency_council`.,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,62
validation-158,Emergency Council Update Function Incorrectly Modifies NFT Manager,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,52
validation-194,Incorrect Role Update in `update_emergency_council_7_D_0_C_1_C_58` Function  of `lib.rs` to Disable the Pools in Case of an Emergency,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,49
validation-229,Emergency Council Update Function Incorrectly Updates NFT Manager,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,62
validation-233,Emergency council address could not be updated by the seawater admin,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,78
validation-29,Incorrect emergency council update,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,40
validation-36,Incorrect implementation of `updateEmergencyCouncil`,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,30
validation-50,An emergency council update will be impossible and results in a wrong state,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,65
validation-64,Incorrectly assigned roles when updating emergency council,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,72
validation-70, Incorrect Update of NFT Manager in Update Emergency Council Function,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,66
validation-75,The update_emergency_council function updates the NFT Manager,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,41
validation-30,Missing update current tick when we call set_sqrt_price_F_F_4_D_B_98_C(),validation-30,Changing the current price does not change the current tick,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1078-L1092,47
findings-29,update_nft_manager will cause existing nft approvals to be invalid and also break Leo's functionality,findings-29,Changing nft manager does not migrate the previous state ,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1104,70
findings-13,A position can be burnt while the pool is disabled,findings-13,Burn can happen even if pool is disabled,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L522-L543,29
findings-43,`swap_2_exact_in_41203_F1_D` incorrecty assumes `amount_in` used in swap operation leading to overpayment of caller and funds stuck,findings-13,Burn can happen even if pool is disabled,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L522-L543,271
validation-173,`burn_position` does not check whether the pool is `enabled`,findings-13,Burn can happen even if pool is disabled,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L522-L543,74
findings-25,"In edge cases, a user can transfer burned NFT positions to steal unclaimed fees due to insufficient checks",validation-76,Approval is not cleared during transfer,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/OwnershipNFTs.sol#L98-L116,162
findings-27,OwnershipNFTs contract fais to reset approvals on token transfer,validation-76,Approval is not cleared during transfer,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/OwnershipNFTs.sol#L98-L116,40
validation-157,Unauthorized NFT reclaiming due to uncleared approvals,validation-76,Approval is not cleared during transfer,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/OwnershipNFTs.sol#L98-L116,37
validation-165,`OwnershipNFTs` Users Can Maintain NFT Ownership After a Transfer and Transfer the NFT Back to Themselves,validation-76,Approval is not cleared during transfer,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/OwnershipNFTs.sol#L98-L116,264
validation-186,Seller can steal back the nft from buyer,validation-76,Approval is not cleared during transfer,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/OwnershipNFTs.sol#L98-L116,53
validation-19,Unrevoked approvals allow NFT recovery by previous owner,validation-76,Approval is not cleared during transfer,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/OwnershipNFTs.sol#L98-L116,62
validation-237,"when NFT position is transferred, approvals are not cleared",validation-76,Approval is not cleared during transfer,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/OwnershipNFTs.sol#L98-L116,163
validation-27,Missing clear token approval when the NFT is transferred.,validation-76,Approval is not cleared during transfer,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/OwnershipNFTs.sol#L98-L116,48
validation-57,Token approvals are not revoked upon transfer which can cause position theft,validation-76,Approval is not cleared during transfer,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/OwnershipNFTs.sol#L98-L116,100
validation-76,Approvals are not revoked on transfer,validation-76,Approval is not cleared during transfer,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/OwnershipNFTs.sol#L98-L116,82
validation-25,No slippage control when calling `swap_internal()`,,This is a core function. User periphery functions to get slippage protection,Unsatisfactory,,71
validation-248,Pool price can easily be controlled by swapping on zero liquidity,,The report is a copy paste from the TOB audit report. Overinflated there is not even a concrete fix,Unsatisfactory,,108
validation-108,Unbound loop enables denial of service,,Lack of proof,Unsatisfactory,,125
findings-16,seawaterAMM.sol's fallback() will revert due to incorrect calldata handling,,Lack of evidence. The function signatures seem to be crafted to conform witht this.,Unsatisfactory,,66
validation-34,Users may lose funds if they use permitTransferFrom,,Lack of evidence. Messages signed normally include context on where it can be used,Unsatisfactory,,63
validation-247,Fees can be locked for some time due to how collect is working,,Lack of evidence on how to reach the state described. Report describes a feature request rather than a security concern,Unsatisfactory,,151
validation-48,Unchecked negation for liquidity in get_amount_0_delta and get_amount_1_delta in sqrt_price_maths,,Lack of evidence on how to reach the described state,Unsatisfactory,,37
validation-227,Incorrect Swap Direction in swapOutPermit23273373B Function Causes Unintended Token Exchanges,,Invalid. zero for one as false indicates usdc -> token,Unsatisfactory,,67
validation-254,Position is not updated when fees are collected,,Invalid. User mistake,Unsatisfactory,,250
findings-19,Missing slippage protection in update_position_C_7_F_1_F_740() flow,,"Invalid. update position is a core function, for slippage protection you should use periphery functions such as increase or decrease position",Unsatisfactory,,68
validation-250,Deadline is missing in update_position,,"Invalid. update position is a core function, for slippage protection you should use periphery functions such as increase or decrease position",Unsatisfactory,,137
validation-31,Lack of slippage control for function updatePositionC7F1F740(),,"Invalid. update position is a core function, for slippage protection you should use periphery functions such as increase or decrease position",Unsatisfactory,,67
validation-109,Permit2 can be frontrunned,,"Invalid. the permit2 message hashed includes the caller, therefore an attacker cannot grab the signature and use it. Reference: https://github.com/Uniswap/permit2/blob/cc56ad0f3439c502c246fc5cfcc3db92bb8b7219/src/libraries/PermitHash.sol#L62",Unsatisfactory,,49
validation-249,`take_permit2()` would revert in valid instances,,"Invalid. the permit2 message hashed includes the caller, therefore an attacker cannot grab the signature and use it. Reference: https://github.com/Uniswap/permit2/blob/cc56ad0f3439c502c246fc5cfcc3db92bb8b7219/src/libraries/PermitHash.sol#L62",Unsatisfactory,,99
validation-82, Inconsistent Disabled State Check ,,Invalid. The flow will lead to update_position which validates the enabled state,Unsatisfactory,,27
validation-105,"remove_position in lib.rs does not check that the position id has an owner, which affects accounting when position is transferred",,Invalid. The check is performed in the NFT contract itself,Unsatisfactory,,110
validation-24,Permit2 update on solidity does not sync with stylus,,Invalid. The change is to the proxy contract not the implementation,Unsatisfactory,,38
validation-196,Positions can be re-initialized,,Invalid. That is not a contract entry point,Unsatisfactory,,75
findings-15,Storage data access across SeawaterAMM and Rust contract during proxy calls renders function calls to fail,,Invalid. PoC is done with custom contracts.,Unsatisfactory,,167
validation-256,Price incorrectly being considered to be in range and will output non-zero value for token 0 and token 1,,Invalid. lower <= tick < upper means the tick is in range,Unsatisfactory,,31
validation-130,Incorrect fee growth calculation will lead to financial discrepancies for liquidity providers (StorageTicks::get_fee_growth_inside),,Invalid. GPT,Unsatisfactory,,130
validation-131,Incorrect Fee Calculation in `position.rs::update` Function,,Invalid. GPT,Unsatisfactory,,86
validation-132,Incorrect price limit checks in swap function can lead to invalid trades,,Invalid. GPT,Unsatisfactory,,132
validation-133,Incorrect Token Amount Handling in `swap_internal()` Can Lead to Fund Loss in Seawater AMM,,Invalid. GPT,Unsatisfactory,,38
validation-134,Ineffective Slippage Protection in SeawaterAMM Swap Functions,,Invalid. GPT,Unsatisfactory,,78
validation-135,Incorrect Fee Accrual in Swap Function Leading to Potential Loss for Liquidity Providers,,Invalid. GPT,Unsatisfactory,,76
validation-136,Inaccurate Fee Growth Tracking in Swap Function May Lead to Incorrect Fee Distribution,,Invalid. GPT,Unsatisfactory,,80
validation-137,Protocol Fee Collection Leads to Potential Fee Overclaiming by Liquidity Providers,,Invalid. GPT,Unsatisfactory,,79
validation-138,Incorrect Liquidity Accounting in Tick Updates Leads to Potential Economic Exploitation,,Invalid. GPT,Unsatisfactory,,85
validation-139,Incorrect Liquidity Accounting in Position Updates Leading to Economic Imbalance,,Invalid. GPT,Unsatisfactory,,126
validation-80,Superposition Fee Calculation Inaccuracies During Rapid Price Volatility,,Invalid. GPT,Unsatisfactory,,176
validation-51,Authorised enablers that are part of the emergency council can't enable a pool,,Invalid. Being the emergency council has a stronger preference to not allow it to enable a pool,Unsatisfactory,,80
validation-207,Silent Overflow in get_amount_0_delta and get_amount_1_delta,,"Invalid, lack of evidence. Report does not gives evidence on how to reach the discussed state",Unsatisfactory,,79
validation-163,Unnecessary Use of payable in NFT Transfers,,Invalid,Unsatisfactory,,54
validation-181, Missing Zero Address Validation,,Invalid,Unsatisfactory,,46
validation-101,Improper Memory Layout Handling for returnData,,Invalid,Unsatisfactory,,74
validation-102,There is no access control when changing sensitive data in pool.rs,,Invalid,Unsatisfactory,,71
validation-106,burn_position_AE401070 will leave liquidity and fees stuck in the contract if uncollected,,Invalid,Unsatisfactory,,92
validation-156,Unchecked External Calls in OwnershipNFTs,,Invalid,Unsatisfactory,,64
validation-168, Lack of Access Control on Critical Functions,,Invalid,Unsatisfactory,,48
validation-170,Unchecked Return Value in Critical Functions,,Invalid,Unsatisfactory,,48
validation-172, Potential Loss of Funds Due to Incorrect Handling of Swap Return Values,,Invalid,Unsatisfactory,,44
validation-182,Lack of Existence Checks for Tokens,,Invalid,Unsatisfactory,,52
validation-192,Unprotected Position Transfer Function,,Invalid,Unsatisfactory,,60
validation-199, Unsafe Use of unwrap() in Address Conversion Leading to Potential Runtime Panics,,Invalid,Unsatisfactory,,133
validation-200,Vulnerability in storage_load_bytes32 Function Due to Unsafe Pointer Handling,,Invalid,Unsatisfactory,,69
validation-202,Re-entrancy on safeTransferFrom() function,,Invalid,Unsatisfactory,,116
validation-216,"Incorrect Slippage Check in swapInPermit2CEAAB576 Function Allows Excessive Slippage, Risking User Funds",,Invalid,Unsatisfactory,,53
validation-217,Sender with both `emergency_council` and `authorised_enablers` roles cannot disable the pool,,Invalid,Unsatisfactory,,109
validation-218,Incorrect Slippage Protection in swapOut5E08A399 Function Leads to Potential User Fund Loss,,Invalid,Unsatisfactory,,75
validation-222,Incorrect ERC721 Approval Check Allows Unauthorized Token Transfers,,Invalid,Unsatisfactory,,58
validation-255,Only the seawater admin can create a pool,,Invalid,Unsatisfactory,,65
validation-83,StoragePositions.new function doesn't check if 'id' has been initialized before,,Invalid,Unsatisfactory,,29
validation-85,Premature Tick Removal/Deletion,,Invalid,Unsatisfactory,,56
validation-215,No Maximum Price Protection in swapIn32502CA71 Exposes Users to Significant Financial Risk,,Invalid,Unsatisfactory,,64
validation-225,Authorization Bypass in NFT Transfers Due to Insufficient Verification in Delegated Calls,,Invalid,Unsatisfactory,,75
validation-226,Anybody can modify a position and mess with the accumulated position fees because of the lack of access control,,Invalid,Unsatisfactory,,101
validation-245,Fees might never be collected,,Invalid,Unsatisfactory,,61
validation-41,Susceptible to reentrancy attacks if the 'transferPositionEEC7A3CD' function of the 'ISeawaterAMM' contract,,Invalid,Unsatisfactory,,78
validation-125,Oracle Price Manipulation Due to Lack of Proper Validation in SeawaterAMM.sol,,Invalid,Unsatisfactory,,104
validation-126,Delegatecall Vulnerability Leading to Reentrancy Risk in SeawaterAMM.sol,,Invalid,Unsatisfactory,,139
validation-152,Potential Delegatecall Vulnerability in Executor Proxies,,Invalid,Unsatisfactory,,46
validation-153,Lack of Validation for Executor Addresses,,Invalid,Unsatisfactory,,58
validation-17,lack of balance check in _from,,Invalid,Unsatisfactory,,26
validation-174,Centralization Risk in Proxy Pattern -  Single Point of Failure in Proxy Admin Role,,Invalid,Unsatisfactory,,40
validation-205,No data validation performed on create_position could lead to storage exhaustion,,Invalid,Unsatisfactory,,23
validation-211,Newly created pool.rs contracts can have their initializers frontrunned ,,Invalid,Unsatisfactory,,94
validation-213,Lack of Access Control on Executor Addresses Enables Complete Contract Compromise,,Invalid,Unsatisfactory,,50
validation-23,"Functions of `ISeawaterExecutors` miss access controls on ``SeaWaterAMM``, allowing unauthorized users to access them",,Invalid,Unsatisfactory,,43
validation-232,One token address cannot have different fee tiers,,Invalid,Unsatisfactory,,58
validation-43,If both ratios passed to _get_amount_0_delta are 0 the logic will break,,Invalid,Unsatisfactory,,23
validation-45,In some edgecases liquidity 0 will result in division by 0 error,,Invalid,Unsatisfactory,,26
validation-47,Unchecked negation for liquidity in get_amount_0_delta and get_amount_1_delta in sqrt_price_maths,,Invalid,Unsatisfactory,,21
validation-66,Storage can be bloated with low liquidity positions,,Invalid,Unsatisfactory,,89
validation-21,Possible reetrancy in the OwnershipNFTs contract,,Invalid,Unsatisfactory,,83
validation-198, Improper Address Packing in pack_details Function Leading to Potential Data Corruption,,GPT,Unsatisfactory,,83
validation-239,token code length is not checked in wasm_erc20,,Creation of pools is permissioned,Unsatisfactory,,66
validation-78,No slippage protection for some of the `swap_internal` functions ,,Core function does not care about slippage protection. There are other swap functions taking consideration of that in the contract,Unsatisfactory,,109
validation-128,Unprotected Fallback Function Allows Unauthorized Access to Admin Functions (`SeawaterAMM::fallback`),,Access control code is in the implementations contract depending on the desired function.,Unsatisfactory,,217
validation-228,Unprotected Proxy Routing Enables Arbitrary Function Execution in SeawaterAMM,,Access control code is in the implementations contract depending on the desired function.,Unsatisfactory,,54
validation-148,Incorrect Tick Validation in create_position Function,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,59
validation-81,Missing lower tick < upper tick check ,validation-59,Ticks can be set in incorrect order,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L83C9-L84C74,50
validation-10,`approve()` shouldn't be called by the approved address for that `tokenId`,validation-10,single-token approvals should not be able to call approve,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L161,59
validation-72,approve() function in the OwnershipNFT contract has incorrect authorization check,validation-10,single-token approvals should not be able to call approve,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L161,61
validation-96,get_next_sqrt_price_from_amount_1_rounding_down() uses overflowing_sub not making sure the value always fits into uint160,validation-185,Operatation should have overflow protection. ,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/pool.rs#L439,47
validation-90,get_sqrt_ratio_at_tick() has different implementation than the one in UniV3,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",45
validation-91,MAX_SQRT_RATIO has different value than the one in UniV3,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",43
validation-95,Values are not casted into uint160 in multiple occasions in sqrt_price_math library,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",81
validation-97,add_delta() has incorrect checks for the result of the add/sub operations,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",78
validation-98,mulDivRoundingUp() function from full_math library deviates from the Uniswap implementation,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",64
validation-99,mulDiv() function in full_math library does not correspond to the same UniswapV3 function at all,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",70
validation-142,Migrations facet is not set in the SeawaterAMM contract,validation-142,Some implementation contracts are missing. Seems QA,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/SeawaterAMM.sol#L82,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L81",60
validation-12,Incorrect onERC721Received Selector Check in `_onTransferReceived()`,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,65
validation-147,Incorrect Implementation of ERC721 Transfer Callback Verification,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,52
validation-67,Incorrect ERC721 receiver check causes safe transfers to always fail,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,97
validation-71,Incorrect checking of the returned data from the callback results in a safeTransferFrom() method revert,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,80
validation-77,OwnershipNFTs contract has Unchecked Return Value of onERC721Received function,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,135
validation-8,OwnershipNFTs contract has Inconsistent Callback Verification in safeTransferFrom Functions,validation-93,Incorrect require statement onERC721Received,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L93,293
validation-11,`tokenURI` IS EIP721 Non-compliant,validation-188,Failure to comply with ERC721 standard,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L13,43
validation-73,_requireAuthorised() check is incorrect as it deviates from the ERC-721 spec,validation-188,Failure to comply with ERC721 standard,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/sol/OwnershipNFTs.sol#L13,59
validation-15,update_emergency_council_7_D_0_C_1_C_58() updates nft manager instead of emergency council,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,71
validation-68,Emergency council update function  incorrectly updates `nft_manager` instead of `emergency_council`,validation-29,Emergency council setter is incorrect,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L1121,64
validation-144,"There is no ""fallback"" feature in the Rust implementation",validation-142,Some implementation contracts are missing. Seems QA,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/sol/SeawaterAMM.sol#L82,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L81",77
validation-184,Token Amount Discrepancy in swap_2_internal_erc20,validation-184,Logic is taking the incorrect amount of tokens in,Satisfactory,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/lib.rs#L273-L291,75
validation-195,Price is not correctly updated in the swap() function,validation-259,Not following uniswap v3 implementation faithfully. Reports fail to provide proof of impact only show the inconsistency,Satisfactory,"https://github.com/code-423n4/2024-08-superposition/blob/main/pkg/seawater/src/pool.rs#L265,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/pkg/seawater/src/maths/tick_math.rs#L20-L59,https://github.com/code-423n4/2024-08-superposition/blob/4528c9d2dbe1550d2660dac903a8246076044905/README.md#L141-L148",65
validation-151,No slippage protection for users in multiple swap() functions,,This is a core function. User periphery functions to get slippage protection,Unsatisfactory,,79
validation-100,transfer() and transferFrom() functions are incorrectly encoded in wasm_erc20,,No security concern/impact described,Unsatisfactory,,57
validation-117,Pool.rs contract has denial of service on the swap function,,Lack of proof,Unsatisfactory,,139
validation-116,word_pos and bit_pos are incorrectly derived when flipping the tick,,Invalid. Spam,Unsatisfactory,,67
validation-118,StoragePool contract contract has Unencrypted Private Data On-Chain,,Invalid. Spam,Unsatisfactory,,76
validation-120,Setting slippage protection for users can lead to the repeated tx revert when performing swaps,,Invalid. Spam,Unsatisfactory,,51
validation-124,swap_math.rs contract has denial of service in the compute_swap_step function,,Invalid. Spam,Unsatisfactory,,212
validation-140,Malicious users can bloat the storage by creating positions with no liquidity,,Invalid. Spam,Unsatisfactory,,66
validation-146,OwnershipNFTs contract has denial of service gas exhaustion in the ownerOf function,,Invalid. Spam,Unsatisfactory,,190
validation-9,OwnershipNFTs contract has incorrect Authorization Logic in _requireAuthorised Function,,Invalid. Spam,Unsatisfactory,,144
validation-121,wasm_erc20.rs contract has Lack of Proper Signature Verification In the take_permit2 function,,Invalid. Signature is processed in the permit2 contract,Unsatisfactory,,67
validation-122,wasm_erc20.rs has Replay Attack Vulnerability on the take_permit2 contract,,Invalid. Signature is processed in the permit2 contract,Unsatisfactory,,93
validation-123,wasm_erc20.rs contract has signature malleability vulnerability in take_permit2 function,,Invalid. Signature is processed in the permit2 contract,Unsatisfactory,,75
validation-119,Pool.rs contract has Transaction Order Dependence on the swap function,,Invalid,Unsatisfactory,,296
validation-110,sqrt_price_math contract has DoS with Block Gas Limit on the get_liquidity_for_amounts function,,Invalid,Unsatisfactory,,141
validation-111,lib.rs contract has collect_7_F21947_C function that handle loops over user inputs,,Invalid,Unsatisfactory,,97
validation-112,lib.rs contract has Insufficient Gas Griefing ERC20 token transfers might cause gas griefing,,Invalid,Unsatisfactory,,108
validation-113,lib.rs contract has Missing Protection against Signature Replay Attacks on swap_2_internal_erc20 function,,Invalid,Unsatisfactory,,104
validation-114,lib.rs contract has DoS with Failed Call on swap_internal function,,Invalid,Unsatisfactory,,104
validation-115,lib.rs contract even with Stylus preventing reentrancy consider adding reentrancy guards to swap_internal function,,Invalid,Unsatisfactory,,118
validation-179,burnPositionAE401070() does not burn ERC721 token,,Invalid,Unsatisfactory,,57
validation-201,decr_position_09293696() is incorrectly implemented in the current version of the protocol,,Invalid,Unsatisfactory,,159
validation-231,only 1 token is supported in the unified liquidity pool,,Invalid,Unsatisfactory,,63
validation-16,ctor() and any other external function can be called by anybody as there is no link to the proxy,,Invalid,Unsatisfactory,,65
validation-169,safeTransferFrom() does not actually transfer the NFT,,Invalid,Unsatisfactory,,73
validation-171,Position is not minted in the `OwnershipNFTs` upon mint in the Rust implementation,,Invalid,Unsatisfactory,,44
validation-13,Missing refund of excess ether,,Invalid,Unsatisfactory,,31
validation-14,Potential stuck NFTs due to `transferFrom()`,,Invalid,Unsatisfactory,,41
validation-145,The proxy contract does not actually use diamond pattern for upgradeability,,Invalid,Unsatisfactory,,76
validation-150,Unnecessary Token Transfer in Quote Function,,Invalid,Unsatisfactory,,55
validation-234,wrong implement of get_tick_at_sqrt_ratio,,Invalid,Unsatisfactory,,28
validation-74,setApprovalForAll() is incompatible with ERC721Metadata,,Invalid,Unsatisfactory,,57
validation-160,Position is not cleared out when calling burn_position(),,Invalid. Behavior is acknowledged in the codebase,Unsatisfactory,,79
validation-166,Position transfer by nft manager can be front-runned by the owner who burnt the position,,Invalid,Unsatisfactory,,72
validation-204,tokenURI does not contain information about position which should not be the case,,No security impact is described,Unsatisfactory,,55